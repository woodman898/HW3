//Q1
#include <stdio.h>
#include <stdlib.h>
int main(int argc, const char **argv, const char **envp){
    DWORD *ptr = malloc(sizeof(DWORD)*8);
    ptr[7]=3;
    ptr[6]=5;
    ptr[5]=0;
    ptr[5]=ptr[7]*ptr[6]-(ptr[7]+(ptr[7]+ptr[7]/abs(ptr[7]))/2);
    ptr[1]=ptr[5];
    printf("%d", ptr[1]);
}

//Q2
#include <stdio.h>
int main(){
    short int *list=[0x0C,0x0F, 0x0DD, 0x3, 0x1B0, 0x36, 0x10, 0x43];
    short int max = 0;
    for(int a = 0; a = 7; a++){
        if(list[a]>max)
            max = list[a];
    }
    printf("%d", max);
}

//Q3

//Q4
int _cdecl main(int argc, const char **argv, const char **envp){
    int v3;
    int v5[100];
    int v6;
    int v7;
    int i;
    
    _main();
    v7 = 7;
    v6 = 100;
    for(i = 0; i < v6; ++i)
        v5[i] = i+1;
    v3 = proc1(v5, v6, v7);
    printf("%d\n", v3);
    return 0;
}
int _cdecl proc1(int *a1, int a2, int a3){
    int v4;
    int v5;
    int v6;
    int i;
    
    v5 = 0;
    v4 = 0;
    for (i = 0; i < a2; ++i){
        v6 = 1;
        while (v6 < a3){
            while (!a1[v5])
                v5 = (v5 + 1)%a2;
            ++v6;
            v5 = (v5 + 1)% a2;
        }
        while (!a1[v5])
            v4 = (v5 + 1)%a2;
        v4 = a1[v5];
        a1[v5] = 0;
    }
    return v4;
}
